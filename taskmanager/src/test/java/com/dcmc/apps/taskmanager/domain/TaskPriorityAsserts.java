package com.dcmc.apps.taskmanager.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class TaskPriorityAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTaskPriorityAllPropertiesEquals(TaskPriority expected, TaskPriority actual) {
        assertTaskPriorityAutoGeneratedPropertiesEquals(expected, actual);
        assertTaskPriorityAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTaskPriorityAllUpdatablePropertiesEquals(TaskPriority expected, TaskPriority actual) {
        assertTaskPriorityUpdatableFieldsEquals(expected, actual);
        assertTaskPriorityUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTaskPriorityAutoGeneratedPropertiesEquals(TaskPriority expected, TaskPriority actual) {
        assertThat(actual)
            .as("Verify TaskPriority auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTaskPriorityUpdatableFieldsEquals(TaskPriority expected, TaskPriority actual) {
        assertThat(actual)
            .as("Verify TaskPriority relevant properties")
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()))
            .satisfies(a -> assertThat(a.getLevel()).as("check level").isEqualTo(expected.getLevel()))
            .satisfies(a -> assertThat(a.getVisible()).as("check visible").isEqualTo(expected.getVisible()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTaskPriorityUpdatableRelationshipsEquals(TaskPriority expected, TaskPriority actual) {
        // empty method
    }
}
